org: timjr
app: strava-data-gen
service: strava-data-gen

frameworkVersion: '3'

custom:
  wsgi:
    app: app.app

  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  
  dataStoreBucket: ${self:service}-${self:custom.stage}-activities-data-store

  # replace with EB topic
  # activitiesTopic: ${self:service}-${self:custom.stage}-activities
  
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.9
  memorySize: 128
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "secretsmanager:*"
      Resource: "*"

    - Effect: Allow
      Action: 's3:ListBucket'
      Resource: '*'

    - Effect: Allow
      Action: 's3:CreateBucket'
      Resource: '*'

    - Effect: Allow
      Action: 's3:PutObject'
      Resource:
        - { "Fn::Join": ["", ["arn:aws:s3:::", "${self:custom.dataStoreBucket}", "/*" ] ]  }

    - Effect: Allow
      Action: 's3:GetObject'
      Resource:
        - { "Fn::Join": ["", ["arn:aws:s3:::", "${self:custom.dataStoreBucket}", "/*" ] ]  }

  environment:

    SM_SECRET_NAME: StravaAPI
    SM_ACCESS_TOKEN_NAME: Strava_${self:custom.stage}_AccessToken

    STRAVA_CLIENT_ID: ${opt:client_id}
    STRAVA_AUTHZ_URL: "https://www.strava.com/oauth/token"
    STRAVA_ACTIVITIES_URL: "https://www.strava.com/api/v3/athlete/activities"

    APP_REGION: ${self:custom.region}
    WEB_BUCKET: ${self:custom.webBucket}
    DATA_STORE_BUCKET: ${self:custom.dataStoreBucket}

    # SM key used to store the secret used to authorize strava requests
    SHARED_SECRET_NAME: strava_shared_secret

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'

# functions:

#   # this endpoint completes subscription with Strava web hooks
#   # update endpoint is subscribed to Strava webhook and triggers getting new activities

#   update:
#     handler: function/update.run
#     timeout: 25
#     events:
#       - httpApi: 'GET /activity'
    
#   subscribe:
#     handler: functions/subscribe.run
#     timeout: 25
#     events:
#       - httpApi: 'POST /activity'

#   populate:
#     handler: functions/populate.run
#     timeout: 60
    
plugins:
  - serverless-wsgi
  - serverless-python-requirements